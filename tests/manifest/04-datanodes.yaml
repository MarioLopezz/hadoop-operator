apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hdfs-datanode
  labels:
    app: hdfs-datanode-app
    release: hdfs-ha
spec:
  serviceName: hdfs-datanode-svc
  selector:
    matchLabels:
      app:  hdfs-datanode-app
  podManagementPolicy: "Parallel"
  replicas: 4
  template:
    metadata:
      labels:
        app: hdfs-datanode-app
        release: hdfs-ha
    spec:
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: datanode
          imagePullPolicy: IfNotPresent
          image: kubernetesbigdataeg/hadoop-datanode:2.7.2-1
          env:
            - name: HADOOP_CUSTOM_CONF_DIR
              value: /etc/hadoop-custom-conf
            - name: MULTIHOMED_NETWORK
              value: "0"
          livenessProbe:
            exec:
              command:
                - /dn-scripts/check-status.sh
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            exec:
              command:
                - /dn-scripts/check-status.sh
            initialDelaySeconds: 60
            periodSeconds: 30
          securityContext:
            privileged: true
          volumeMounts:
            - name: dn-scripts
              mountPath: /dn-scripts
              readOnly: true
            - name: hdfs-env
              mountPath: /etc/environments
            - name: hdfs-data
              mountPath: /hadoop/dfs/data/
      restartPolicy: Always
      volumes:
        - name: dn-scripts
          configMap:
            name: hdfs-datanode-scripts
            defaultMode: 0744
        - name: hdfs-env
          configMap:
            name: hdfs-config
  volumeClaimTemplates:
    - metadata:
        name: hdfs-data
      spec:
        accessModes: 
          - ReadWriteOnce
        storageClassName: fast-disks
        resources:
          requests:
            storage: 20Mi

